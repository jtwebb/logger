{"version":3,"file":"bundle.umd.min.js","sources":["../../src/index.js"],"sourcesContent":["/* eslint-disable no-console */\n\nconst util = require('util');\nconst modifiers = require('./styles.js');\n\nconst logLevels = { off: 0, error: 1, warn: 2, info: 3, debug: 4, trace: 5 };\nconst logLevel = process.env.NODE_LOG_LEVEL || 5;\nconst windowSize = { width: process.stdout.columns || 0, height: process.stdout.rows || 0 };\nconst logMeta = {\n  assert: { labelStyle: 'bgRedBright.white', textStyle: 'bgRedBright', logLevel: logLevels.trace, label: 'Assert' },\n  clear: {},\n  count: { logLevel: logLevels.info },\n  countReset: { logLevel: logLevels.info },\n  debug: { labelStyle: 'bgBlue.white', textStyle: 'blue', logLevel: logLevels.debug, label: 'Debug' },\n  dir: { logLevel: logLevels.debug },\n  dirxml: { logLevel: logLevels.debug },\n  error: { labelStyle: 'white.bgRed', textStyle: 'red', logLevel: logLevels.error, label: 'Error' },\n  group: { logLevel: logLevels.info },\n  groupCollapsed: { logLevel: logLevels.info },\n  groupEnd: { logLevel: logLevels.info },\n  info: { labelStyle: 'black.bgCyan', textStyle: 'cyan', logLevel: logLevels.info, label: 'Info' },\n  log: { labelStyle: 'black.bgWhite', textStyle: 'white', logLevel: logLevels.info, label: 'Log' },\n  profile: { logLevel: logLevels.info },\n  profileEnd: { logLevel: logLevels.info },\n  table: { logLevel: logLevels.info },\n  time: { logLevel: logLevels.debug },\n  timeEnd: { logLevel: logLevels.debug },\n  timeLog: { logLevel: logLevels.debug },\n  timeStamp: { logLevel: logLevels.debug },\n  trace: { logLevel: logLevels.trace },\n  warn: { labelStyle: 'black.bgYellow', textStyle: 'yellow', logLevel: logLevels.warn, label: 'Warn' }\n};\n\nconst wrap = style => {\n  const styles = style.split('.');\n\n  const styling = styles.reduce((acc, current) => {\n    for (const modifierType of Object.keys(modifiers)) {\n      if (modifiers[modifierType][current]) {\n        acc.push(modifiers[modifierType][current]);\n        break;\n      }\n    }\n\n    return acc;\n  }, []);\n\n  return (...msg) => {\n    const wrapper = styling.reduce((acc, current) => {\n      acc = `\\u001B[${current[0]}m${acc}\\u001B[${current[1]}m`;\n      return acc;\n    }, '%s');\n\n    return util.format(wrapper, util.format(...msg));\n  };\n};\n\nconst addLog = current => {\n  const meta = logMeta[current];\n  if (logLevel >= meta.logLevel) {\n    return (...msg) => {\n      if (!meta.label) {\n        if (meta.labelStyle) {\n          console[current](wrap(meta.labelStyle)(` ${util.format(...msg)} `));\n        } else {\n          console[current](...msg);\n        }\n      } else {\n        console[current](`${wrap(meta.labelStyle)(` ${meta.label}: `)}  ${wrap(meta.textStyle)(...msg)}`);\n      }\n    };\n  }\n\n  return () => {};\n};\n\nconst logs = {};\n\nlogs.assert = addLog('assert');\nlogs.clear = addLog('clear');\nlogs.count = addLog('count');\nlogs.countReset = addLog('countReset');\nlogs.debug = addLog('debug');\nlogs.dir = addLog('dir');\nlogs.dirxml = addLog('dirxml');\nlogs.error = addLog('error');\nlogs.group = addLog('group');\nlogs.groupCollapsed = addLog('groupCollapsed');\nlogs.groupEnd = addLog('groupEnd');\nlogs.info = addLog('info');\nlogs.log = addLog('log');\nlogs.profile = addLog('profile');\nlogs.profileEnd = addLog('profileEnd');\nlogs.table = addLog('table');\nlogs.time = addLog('time');\nlogs.timeEnd = addLog('timeEnd');\nlogs.timeLog = addLog('timeLog');\nlogs.timeStamp = addLog('timeStamp');\nlogs.trace = addLog('trace');\nlogs.warn = addLog('warn');\n\nlogs.beep = () => console.log('\\x07');\n\nlogs.assert = (assertion, ...msg) => {\n  if (!assertion) {\n    const { labelStyle, label, textStyle } = logMeta.assert;\n    if (typeof msg?.[0] === 'string') {\n      console.log(`${wrap(labelStyle)(` ${label} `)}  ${wrap(textStyle)(...msg)}`);\n    } else {\n      console.error(`${wrap(labelStyle)(` ${label} `)}`);\n      msg.forEach(obj => {\n        console.dir(obj, { showHidden: true, depth: 2, colors: true });\n      });\n    }\n  }\n};\n\nlogs.headerChars = (char = '=', ...msg) => {\n  const message = util.format(...msg);\n  const maxLength = Math.max(message.length + 3, windowSize.width - 3);\n\n  console.log(`# ${`${char}`.repeat(maxLength)}`);\n  console.log(`# - ${message}`);\n  console.log(`# ${`${char}`.repeat(maxLength)}`);\n};\n\nmodule.exports = logs;\n"],"names":["util","require","modifiers","logLevels","logLevel","process","env","NODE_LOG_LEVEL","windowSize","stdout","columns","logMeta","rows","assert","labelStyle","textStyle","label","clear","count","countReset","debug","dir","dirxml","error","group","groupCollapsed","groupEnd","info","log","profile","profileEnd","table","time","timeEnd","timeLog","timeStamp","trace","warn","wrap","style","styling","split","reduce","acc","current","Object","keys","modifierType","push","wrapper","format","addLog","meta","console","logs","beep","assertion","msg","forEach","obj","showHidden","depth","colors","headerChars","char","message","maxLength","Math","max","length","repeat","module","exports"],"mappings":"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"}